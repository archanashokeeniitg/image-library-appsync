[{"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\index.js":"1","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Home.js":"2","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\graphql\\mutations.js":"3","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Upload.js":"4","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Album.js":"5","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\ImageGallery.js":"6","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\SearchImage.js":"7","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\FindImage.js":"8","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\layout\\Header.js":"9"},{"size":230,"mtime":1604733405957,"results":"10","hashOfConfig":"11"},{"size":4857,"mtime":1606546528969,"results":"12","hashOfConfig":"11"},{"size":1267,"mtime":1604733463030,"results":"13","hashOfConfig":"11"},{"size":4416,"mtime":1606527014529,"results":"14","hashOfConfig":"11"},{"size":4859,"mtime":1606558026199,"results":"15","hashOfConfig":"11"},{"size":3388,"mtime":1606546513098,"results":"16","hashOfConfig":"11"},{"size":739,"mtime":1606088906058,"results":"17","hashOfConfig":"11"},{"size":1799,"mtime":1606546938146,"results":"18","hashOfConfig":"11"},{"size":1978,"mtime":1606546999373,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"zcpxzz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\index.js",[],["43","44"],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Home.js",["45","46","47","48"],"import React, { useState, useEffect } from \"react\";\r\nimport ImageGallery from \"./ImageGallery\";\r\nimport SearchImage from \"./SearchImage\";\r\nimport { Storage, API, graphqlOperation } from \"aws-amplify\";\r\nimport { listPictures, getPicture, searchPictures } from \"../graphql/queries\";\r\nimport { updatePicture, deletePicture } from \"../graphql/mutations\";\r\n\r\nfunction Home(props) {\r\n  const [images, setImages] = useState([]);\r\n  const [picture] = useState(\"\");\r\n  const [myAlert, setMyAlert] = useState(false);\r\n  // const [searchTag, setSearchTag] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAllImagesToState();\r\n  }, [picture]);\r\n\r\n  //retrieving response in json and formatting data in an array\r\n  const getAllImagesToState = async () => {\r\n    const result = await API.graphql(graphqlOperation(listPictures));\r\n    let imageArray = await buildImageArray(result.data.listPictures.items);\r\n    setImages(imageArray);\r\n  };\r\n  const buildImageArray = async (listPictures) => {\r\n    return await getImagesFileList(listPictures);\r\n  };\r\n  const getImagesFileList = async (imageList) => {\r\n    return Promise.all(\r\n      imageList.map(async (i) => {\r\n        return getOneFormatedImage(i);\r\n      })\r\n    );\r\n  };\r\n  const getOneFormatedImage = async (image) => {\r\n    console.log(\"getOneFormatedImage\", image);\r\n    return {\r\n      src: await Storage.get(image.file.key),\r\n      id: image.id,\r\n      owner: image.owner,\r\n      tag: image.tag,\r\n      lables: image.labels,\r\n      celeb: image.celeb,\r\n      createdAt: image.createdAt,\r\n      updatedAt: image.updatedAt,\r\n    };\r\n  };\r\n\r\n  //for deleting image\r\n  const deleteImage = async (imageId) => {\r\n    const id = {\r\n      id: imageId,\r\n    };\r\n    try {\r\n      await API.graphql(graphqlOperation(deletePicture, { input: id }));\r\n\r\n      const i = images.filter((value, index, arr) => {\r\n        return value.id !== imageId;\r\n      });\r\n      setImages(i);\r\n      setMyAlert(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Cannot delete: User doesn't own this image\");\r\n    }\r\n  };\r\n\r\n  const downloadImage = async (src) => {\r\n    console.log(\"src\", src);\r\n      // const signedURL = await Storage.get(key);\r\n      // console.log(\"signedURL\", signedURL);\r\n      // <a href={signedURL} target=\"_blank\">{fileName}</a>\r\n\r\n      // inside your template or JSX code. Note <a download> doesn't work here because it is not same origin\r\n      // <a href={signedURL} target=\"_blank\">{fileName}</a>\r\n\r\n      // const response = await API.graphql(\r\n      //   graphqlOperation(getPicture, { id: id })\r\n      // );\r\n      // const signedURL = await Storage.get(formData.image);\r\n      // formData.image = signedURL;\r\n\r\n      // console.log(\"id download\", id);\r\n      // const signedURL = await Storage.get();\r\n      // console.log(\"signed Url\", signedURL);\r\n      //console.log(\"signeddd url\", response.data.getPicture.file);\r\n  };\r\n\r\n  const manualLabels = async (imageId, tagValue) => {\r\n    const image = images.filter((value, index, arr) => {\r\n      return value.id === imageId;\r\n    });\r\n\r\n    let labels = image[0].labels;\r\n    labels.push(tagValue);\r\n\r\n    const input = {\r\n      id: imageId,\r\n      labels: labels,\r\n    };\r\n\r\n    try {\r\n      await API.graphql(graphqlOperation(updatePicture, { input: input }));\r\n\r\n      //Then I need to refresh the state with the new tag\r\n      await getAllImagesToState();\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Cannot edit: Authentication Failed\");\r\n    }\r\n  }\r\n\r\n  const searchImage = async (searchLabel) => {\r\n    var result;\r\n    console.log(\"searchLabel\", searchLabel);\r\n\r\n    // when no search filter is passed, revert back to full list\r\n    if (searchLabel.label == \"\") {\r\n      await getAllImagesToState();\r\n    } else {\r\n      const filter = {\r\n        labels: {\r\n          match: {\r\n            labels: searchLabel,\r\n          },\r\n        },\r\n      };\r\n      result = await API.graphql(\r\n        graphqlOperation(searchPictures, { filter: filter })\r\n      );\r\n\r\n      if (result.data.searchPictures.items.length > 0) {\r\n        let imageArray = await buildImageArray(\r\n          result.data.searchPictures.items\r\n        );\r\n        console.log(\" imageArray\", imageArray);\r\n        setImages(imageArray);\r\n      } else {\r\n        alert(\" Sorry! nothing matches your search\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row d-flex justify-content-center\">\r\n        <SearchImage searchImage={searchImage} />\r\n      </div>\r\n\r\n      {myAlert ? (\r\n        <div id=\"success-alert\" className=\"alert alert-danger\" role=\"alert\">\r\n          image deleted successfully!!!\r\n        </div>\r\n      ) : null}\r\n      <br />\r\n\r\n      <ImageGallery\r\n        images={images}\r\n        deleteImage={deleteImage}\r\n        downloadImage={downloadImage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\graphql\\mutations.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Upload.js",["49","50","51","52","53","54","55","56","57","58"],"import React, { useState, useEffect } from \"react\";\r\nimport { Storage, API, graphqlOperation, label } from \"aws-amplify\";\r\nimport { createPicture } from \"../graphql/mutations\";\r\nimport Predictions from \"@aws-amplify/predictions\";\r\nimport awsExports from \"../aws-exports\";\r\nimport \"./Upload.css\";\r\nfunction Upload(props) {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [alert, setAlert] = useState(false);\r\n  const [tag, setTag] = useState(\"\");\r\n  const [labels, setLabels] = useState([]);\r\n  const [celeb, setCeleb] = useState([]);\r\n\r\n  const findImageLabels = async (file) => {\r\n    console.log(\"inside Label\");\r\n    return Predictions.identify({\r\n      labels: {\r\n        source: {\r\n          file,\r\n        },\r\n        type: \"LABELS\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(\"lables 1\", response);\r\n        let labels = response.labels.map((label) => {\r\n          if (label.metadata.confidence > 70) return label.name;\r\n        });\r\n        console.log(\"lables are\", labels);\r\n        console.log(\"inside 3\", labels.filter(Boolean));\r\n        return labels.filter(Boolean);\r\n      })\r\n\r\n      .catch((err) => console.log({ err }));\r\n  };\r\n\r\n  const celebritySearch = async (file) => {\r\n      console.log(\"Inside celeb\");\r\n      return Predictions.identify({\r\n        entities: {\r\n          source: {\r\n            file,\r\n          },\r\n          celebrityDetection: true // boolean. It will only show detected celebrities \r\n        }\r\n      })\r\n      .then(({ response }) => {\r\n        response.entities.forEach(({ boundingBox, landmarks, metadata }) => {\r\n          const { \r\n              name,\r\n              urls \r\n          } = metadata; // celebrity info\r\n          let celeb = response.entities.map((label) => {\r\n            if (celeb.metadata.confidence > 70) return celeb.name;\r\n          });\r\n          return celeb.filter(Boolean);\r\n        })\r\n      })\r\n      .catch(err => console.log({ err }));\r\n  };\r\n  \r\n  const sendImageToDB = async (image) => {\r\n    console.log(\"inside db write\", image);\r\n    try {\r\n      await API.graphql(graphqlOperation(createPicture, { input: image }));\r\n    } catch (err) {\r\n      console.log(\"db write error\");\r\n    }\r\n  };\r\n  const handleOnFileChange = (e) => {\r\n    let selectedFile = e.target.files[0];\r\n    setSelectedFile(selectedFile);\r\n    console.log(\"handlefileschangexxxxx\", selectedFile);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"inside handlechange\");\r\n    e.preventDefault();\r\n    console.log(\"{tag}\", { tag });\r\n    console.log(\"{selectedFile}\", selectedFile);\r\n\r\n    //storing image in S3\r\n    Storage.put(selectedFile.name, selectedFile, {\r\n      contentType: \"image/png\",\r\n    }).then((result) => {\r\n      findImageLabels(selectedFile).then((labels) => {\r\n        console.log(\"m returnddd\", labels);\r\n        setLabels(labels);\r\n\r\n        // this.selectedFileState({ file: URL.createObjectURL(selectedFile) });\r\n\r\n        //this.selectedFileState({ file: URL.createObjectURL(selectedFile) });\r\n        //console.log(\"srccccc\", this.selectedFile);\r\n        const image = {\r\n          name: selectedFile.name,\r\n          tag: tag,\r\n          labels: labels,\r\n          file: {\r\n            bucket: awsExports.aws_user_files_s3_bucket,\r\n            region: awsExports.aws_user_files_s3_bucket_region,\r\n            key: selectedFile.name,\r\n          },\r\n        };\r\n        console.log(\"image payload\", image);\r\n        setAlert(true);\r\n        sendImageToDB(image);\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {alert ? (\r\n        <div className=\"alert alert-success\" role=\"alert\">\r\n          Image Sucessfully Uploaded!!!\r\n        </div>\r\n      ) : null}\r\n      <form className=\"jumbotron\" onSubmit={handleChange}>\r\n        <input type=\"file\" onChange={handleOnFileChange} />\r\n        <input\r\n          type=\"text\"\r\n          value={tag}\r\n          placeholder=\"Enter image Tag Here before uploading your file\"\r\n          onChange={({ target }) => setTag(target.value)}\r\n        />\r\n\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n\r\n    // {alert ? (\r\n    //   <div>\r\n    //     <img\r\n    //       className=\"jumbotron\"\r\n    //       src={selectedFile}\r\n    //       alt=\" uploading area...\"\r\n    //       width=\"300\"\r\n    //       height=\"450\"\r\n    //     />\r\n    //   </div>\r\n    // ) : null}\r\n  );\r\n}\r\nexport default Upload;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Album.js",["59","60","61","62"],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\ImageGallery.js",["63","64","65","66"],"import React, { Component, useState } from \"react\";\r\nimport { Card, CardImg, Row, Col, CardText } from \"reactstrap\";\r\n\r\nimport { API, graphqlOperation, label } from \"aws-amplify\";\r\nimport { updatePicture } from \"../graphql/mutations\";\r\nimport awsExports from \"../aws-exports\";\r\nimport \"./Home.css\";\r\n\r\nfunction ImageGallery(props) {\r\n  const [editedTag, setEditedTag] = useState(\"\");\r\n  const [imageID, setImageID] = useState(\"\");\r\n  const [toggle, setToggle] = useState(false);\r\n  //const [imageLabels, setImageLabels] = useState(undefined);\r\n  console.log(\"inside Imagegallery\", props);\r\n\r\n  const updateDB = async (payload) => {\r\n    console.log(\"inside db updateDB\", payload);\r\n    try {\r\n      await API.graphql(graphqlOperation(updatePicture, { input: payload }));\r\n    } catch (err) {\r\n      console.log(\"db write error while updateing\");\r\n    }\r\n  };\r\n\r\n  const handleOnTagChange = (newTag, imageID) => {\r\n    console.log(\"inside handleachange\", newTag, imageID);\r\n    setEditedTag(newTag);\r\n    console.log(\"editedTag\", editedTag);\r\n    const payload = {\r\n      id: imageID,\r\n      tag: editedTag,\r\n    };\r\n    updateDB(payload);\r\n  };\r\n\r\n  // class ImageGallery extends Component {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Row>\r\n        {props.images.map((image) => (\r\n          <Col key={image.id}>\r\n            <Card className=\" jumbotron \">\r\n              <div>\r\n                <i\r\n                  className=\"fa fa-trash pull-left \"\r\n                  aria-hidden=\"true\"\r\n                  onClick={(event) => {\r\n                    props.deleteImage(image.id);\r\n                  }}\r\n                ></i>\r\n                <a\r\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  href={image.src}\r\n                  download=\"download.png\"\r\n                >\r\n                  <i className=\"fa fa-download \"></i>\r\n                </a>\r\n                <i\r\n                  className=\"fa fa-edit pull-right \"\r\n                  onClick={(event) => {\r\n                    setImageID(image.id);\r\n                    setToggle(true);\r\n                  }}\r\n                ></i>\r\n\r\n                <CardImg\r\n                  className=\"\"\r\n                  src={image.src}\r\n                  alt=\"Smiley face\"\r\n                  width=\"100\"\r\n                  height=\"200\"\r\n                />\r\n                <br />\r\n                <div className=\"align-items-start\">\r\n                  <CardText>owner : {image.owner}</CardText>\r\n\r\n                  {toggle ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      defaultValue={image.tag}\r\n                      onChange={(e) =>\r\n                        handleOnTagChange(e.target.value, image.id)\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <CardText> Tag : {image.tag}</CardText>\r\n                  )}\r\n\r\n                  <CardText> Dated: {image.updatedAt.toString()}</CardText>\r\n\r\n                  <CardText className=\"img-label\">\r\n                    <b>Labels using Rekognition</b>\r\n                    <br />\r\n                    {image.lables ? image.lables.join(\", \") : \"\"} \r\n                  </CardText>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\SearchImage.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\FindImage.js",["67","68","69","70","71","72","73","74"],"import React, { useState, useEffect } from \"react\";\r\nimport { Storage, API, graphqlOperation, label } from \"aws-amplify\";\r\nimport { createPicture } from \"../graphql/mutations\";\r\nimport Unsplash, { toJson } from \"unsplash-js\";\r\nimport Predictions from \"@aws-amplify/predictions\";\r\nimport awsExports from \"../aws-exports\";\r\nimport \"./FindImage.css\";\r\n\r\nfunction FindImage(props) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [pics, setPics] = useState([]);\r\n  console.log(query);\r\n\r\n  const searchPhotos = async (e) => {\r\n    e.preventDefault();\r\n    unsplash.search\r\n    .photos(query)\r\n    .then(toJson)\r\n    .then((json) => {\r\n        setPics(json.results);\r\n    });\r\n  };\r\n\r\n  const unsplash = new Unsplash({\r\n    accessKey: process.env.REACT_APP_ACCESS_KEY,\r\n  });\r\n\r\n  return (\r\n    <>\r\n        <form onSubmit={searchPhotos} className=\"form-inline\" >\r\n            <div class=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"query\"\r\n                    className=\"form-control\"\r\n                    placeholder={`Search Using Labels`}\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n                </button>\r\n            </div>\r\n      </form>\r\n      <div className=\"card-list\">\r\n        {\r\n          pics.map((pic) =>\r\n            <div className=\"card\" key={pic.id}>\r\n              <img\r\n                className=\"card-image\"\r\n                alt={pic.alt_description}\r\n                src={pic.urls.full}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              ></img>\r\n            </div>)}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default FindImage;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\layout\\Header.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":5,"column":24,"nodeType":"81","messageId":"82","endLine":5,"endColumn":34},{"ruleId":"83","severity":1,"message":"84","line":16,"column":6,"nodeType":"85","endLine":16,"endColumn":15,"suggestions":"86"},{"ruleId":"79","severity":1,"message":"87","line":88,"column":9,"nodeType":"81","messageId":"82","endLine":88,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":117,"column":27,"nodeType":"90","messageId":"91","endLine":117,"endColumn":29},{"ruleId":"79","severity":1,"message":"92","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"93","line":2,"column":42,"nodeType":"81","messageId":"82","endLine":2,"endColumn":47},{"ruleId":"79","severity":1,"message":"94","line":11,"column":10,"nodeType":"81","messageId":"82","endLine":11,"endColumn":16},{"ruleId":"79","severity":1,"message":"95","line":12,"column":10,"nodeType":"81","messageId":"82","endLine":12,"endColumn":15},{"ruleId":"79","severity":1,"message":"96","line":12,"column":17,"nodeType":"81","messageId":"82","endLine":12,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":26,"column":50,"nodeType":"99","messageId":"100","endLine":26,"endColumn":52},{"ruleId":"79","severity":1,"message":"101","line":37,"column":9,"nodeType":"81","messageId":"82","endLine":37,"endColumn":24},{"ruleId":"79","severity":1,"message":"102","line":50,"column":15,"nodeType":"81","messageId":"82","endLine":50,"endColumn":19},{"ruleId":"79","severity":1,"message":"103","line":51,"column":15,"nodeType":"81","messageId":"82","endLine":51,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":53,"column":53,"nodeType":"99","messageId":"100","endLine":53,"endColumn":55},{"ruleId":"79","severity":1,"message":"80","line":5,"column":24,"nodeType":"81","messageId":"82","endLine":5,"endColumn":34},{"ruleId":"83","severity":1,"message":"84","line":16,"column":6,"nodeType":"85","endLine":16,"endColumn":15,"suggestions":"104"},{"ruleId":"79","severity":1,"message":"87","line":88,"column":9,"nodeType":"81","messageId":"82","endLine":88,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":117,"column":27,"nodeType":"90","messageId":"91","endLine":117,"endColumn":29},{"ruleId":"79","severity":1,"message":"105","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"93","line":4,"column":33,"nodeType":"81","messageId":"82","endLine":4,"endColumn":38},{"ruleId":"79","severity":1,"message":"106","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":18},{"ruleId":"79","severity":1,"message":"107","line":11,"column":10,"nodeType":"81","messageId":"82","endLine":11,"endColumn":17},{"ruleId":"79","severity":1,"message":"92","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"108","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":17},{"ruleId":"79","severity":1,"message":"109","line":2,"column":19,"nodeType":"81","messageId":"82","endLine":2,"endColumn":22},{"ruleId":"79","severity":1,"message":"110","line":2,"column":24,"nodeType":"81","messageId":"82","endLine":2,"endColumn":40},{"ruleId":"79","severity":1,"message":"93","line":2,"column":42,"nodeType":"81","messageId":"82","endLine":2,"endColumn":47},{"ruleId":"79","severity":1,"message":"111","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":23},{"ruleId":"79","severity":1,"message":"112","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":19},{"ruleId":"79","severity":1,"message":"106","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":18},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'getPicture' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllImagesToState'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'manualLabels' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'label' is defined but never used.","'labels' is assigned a value but never used.","'celeb' is assigned a value but never used.","'setCeleb' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'celebritySearch' is assigned a value but never used.","'name' is assigned a value but never used.","'urls' is assigned a value but never used.",["116"],"'Component' is defined but never used.","'awsExports' is defined but never used.","'imageID' is assigned a value but never used.","'Storage' is defined but never used.","'API' is defined but never used.","'graphqlOperation' is defined but never used.","'createPicture' is defined but never used.","'Predictions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},"Update the dependencies array to be: [getAllImagesToState, picture]",{"range":"120","text":"121"},{"range":"122","text":"121"},[618,627],"[getAllImagesToState, picture]",[619,628]]