[{"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\index.js":"1","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Home.js":"2","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\graphql\\mutations.js":"3","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Upload.js":"4","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\ImageGallery.js":"5","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\SearchImage.js":"6","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\FindImage.js":"7","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\layout\\Header.js":"8","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\App.js":"9","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\App.test.js":"10","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\aws-exports.js":"11","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Album.jsx":"12","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\layout\\Footer.js":"13","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\graphql\\queries.js":"14","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\graphql\\subscriptions.js":"15","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\reportWebVitals.js":"16","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\setupTests.js":"17","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\AlbumGallery.js":"18"},{"size":230,"mtime":1604733405957,"results":"19","hashOfConfig":"20"},{"size":4857,"mtime":1606546528969,"results":"21","hashOfConfig":"20"},{"size":1267,"mtime":1604733463030,"results":"22","hashOfConfig":"23"},{"size":4416,"mtime":1606527014529,"results":"24","hashOfConfig":"20"},{"size":3388,"mtime":1606546513098,"results":"25","hashOfConfig":"20"},{"size":739,"mtime":1606583638192,"results":"26","hashOfConfig":"20"},{"size":1799,"mtime":1606546938146,"results":"27","hashOfConfig":"20"},{"size":1978,"mtime":1606546999373,"results":"28","hashOfConfig":"23"},{"size":1434,"mtime":1604733463027,"results":"29","hashOfConfig":"23"},{"size":246,"mtime":1603608767334,"results":"30","hashOfConfig":"23"},{"size":1267,"mtime":1606526540454,"results":"31","hashOfConfig":"23"},{"size":2610,"mtime":1606585585974,"results":"32","hashOfConfig":"20"},{"size":220,"mtime":1604733405954,"results":"33","hashOfConfig":"23"},{"size":1417,"mtime":1604733463030,"results":"34","hashOfConfig":"20"},{"size":934,"mtime":1604733463031,"results":"35","hashOfConfig":"23"},{"size":362,"mtime":1603608767334,"results":"36","hashOfConfig":"23"},{"size":241,"mtime":1603608767334,"results":"37","hashOfConfig":"23"},{"size":1671,"mtime":1606585683281,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"mhve2t",{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k3zngg",{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\index.js",[],["79","80"],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Home.js",["81","82","83","84"],"import React, { useState, useEffect } from \"react\";\r\nimport ImageGallery from \"./ImageGallery\";\r\nimport SearchImage from \"./SearchImage\";\r\nimport { Storage, API, graphqlOperation } from \"aws-amplify\";\r\nimport { listPictures, getPicture, searchPictures } from \"../graphql/queries\";\r\nimport { updatePicture, deletePicture } from \"../graphql/mutations\";\r\n\r\nfunction Home(props) {\r\n  const [images, setImages] = useState([]);\r\n  const [picture] = useState(\"\");\r\n  const [myAlert, setMyAlert] = useState(false);\r\n  // const [searchTag, setSearchTag] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getAllImagesToState();\r\n  }, [picture]);\r\n\r\n  //retrieving response in json and formatting data in an array\r\n  const getAllImagesToState = async () => {\r\n    const result = await API.graphql(graphqlOperation(listPictures));\r\n    let imageArray = await buildImageArray(result.data.listPictures.items);\r\n    setImages(imageArray);\r\n  };\r\n  const buildImageArray = async (listPictures) => {\r\n    return await getImagesFileList(listPictures);\r\n  };\r\n  const getImagesFileList = async (imageList) => {\r\n    return Promise.all(\r\n      imageList.map(async (i) => {\r\n        return getOneFormatedImage(i);\r\n      })\r\n    );\r\n  };\r\n  const getOneFormatedImage = async (image) => {\r\n    console.log(\"getOneFormatedImage\", image);\r\n    return {\r\n      src: await Storage.get(image.file.key),\r\n      id: image.id,\r\n      owner: image.owner,\r\n      tag: image.tag,\r\n      lables: image.labels,\r\n      celeb: image.celeb,\r\n      createdAt: image.createdAt,\r\n      updatedAt: image.updatedAt,\r\n    };\r\n  };\r\n\r\n  //for deleting image\r\n  const deleteImage = async (imageId) => {\r\n    const id = {\r\n      id: imageId,\r\n    };\r\n    try {\r\n      await API.graphql(graphqlOperation(deletePicture, { input: id }));\r\n\r\n      const i = images.filter((value, index, arr) => {\r\n        return value.id !== imageId;\r\n      });\r\n      setImages(i);\r\n      setMyAlert(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Cannot delete: User doesn't own this image\");\r\n    }\r\n  };\r\n\r\n  const downloadImage = async (src) => {\r\n    console.log(\"src\", src);\r\n      // const signedURL = await Storage.get(key);\r\n      // console.log(\"signedURL\", signedURL);\r\n      // <a href={signedURL} target=\"_blank\">{fileName}</a>\r\n\r\n      // inside your template or JSX code. Note <a download> doesn't work here because it is not same origin\r\n      // <a href={signedURL} target=\"_blank\">{fileName}</a>\r\n\r\n      // const response = await API.graphql(\r\n      //   graphqlOperation(getPicture, { id: id })\r\n      // );\r\n      // const signedURL = await Storage.get(formData.image);\r\n      // formData.image = signedURL;\r\n\r\n      // console.log(\"id download\", id);\r\n      // const signedURL = await Storage.get();\r\n      // console.log(\"signed Url\", signedURL);\r\n      //console.log(\"signeddd url\", response.data.getPicture.file);\r\n  };\r\n\r\n  const manualLabels = async (imageId, tagValue) => {\r\n    const image = images.filter((value, index, arr) => {\r\n      return value.id === imageId;\r\n    });\r\n\r\n    let labels = image[0].labels;\r\n    labels.push(tagValue);\r\n\r\n    const input = {\r\n      id: imageId,\r\n      labels: labels,\r\n    };\r\n\r\n    try {\r\n      await API.graphql(graphqlOperation(updatePicture, { input: input }));\r\n\r\n      //Then I need to refresh the state with the new tag\r\n      await getAllImagesToState();\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Cannot edit: Authentication Failed\");\r\n    }\r\n  }\r\n\r\n  const searchImage = async (searchLabel) => {\r\n    var result;\r\n    console.log(\"searchLabel\", searchLabel);\r\n\r\n    // when no search filter is passed, revert back to full list\r\n    if (searchLabel.label == \"\") {\r\n      await getAllImagesToState();\r\n    } else {\r\n      const filter = {\r\n        labels: {\r\n          match: {\r\n            labels: searchLabel,\r\n          },\r\n        },\r\n      };\r\n      result = await API.graphql(\r\n        graphqlOperation(searchPictures, { filter: filter })\r\n      );\r\n\r\n      if (result.data.searchPictures.items.length > 0) {\r\n        let imageArray = await buildImageArray(\r\n          result.data.searchPictures.items\r\n        );\r\n        console.log(\" imageArray\", imageArray);\r\n        setImages(imageArray);\r\n      } else {\r\n        alert(\" Sorry! nothing matches your search\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row d-flex justify-content-center\">\r\n        <SearchImage searchImage={searchImage} />\r\n      </div>\r\n\r\n      {myAlert ? (\r\n        <div id=\"success-alert\" className=\"alert alert-danger\" role=\"alert\">\r\n          image deleted successfully!!!\r\n        </div>\r\n      ) : null}\r\n      <br />\r\n\r\n      <ImageGallery\r\n        images={images}\r\n        deleteImage={deleteImage}\r\n        downloadImage={downloadImage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\graphql\\mutations.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Upload.js",["85","86","87","88","89","90","91","92","93","94"],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\ImageGallery.js",["95","96","97","98"],"import React, { Component, useState } from \"react\";\r\nimport { Card, CardImg, Row, Col, CardText } from \"reactstrap\";\r\n\r\nimport { API, graphqlOperation, label } from \"aws-amplify\";\r\nimport { updatePicture } from \"../graphql/mutations\";\r\nimport awsExports from \"../aws-exports\";\r\nimport \"./Home.css\";\r\n\r\nfunction ImageGallery(props) {\r\n  const [editedTag, setEditedTag] = useState(\"\");\r\n  const [imageID, setImageID] = useState(\"\");\r\n  const [toggle, setToggle] = useState(false);\r\n  //const [imageLabels, setImageLabels] = useState(undefined);\r\n  console.log(\"inside Imagegallery\", props);\r\n\r\n  const updateDB = async (payload) => {\r\n    console.log(\"inside db updateDB\", payload);\r\n    try {\r\n      await API.graphql(graphqlOperation(updatePicture, { input: payload }));\r\n    } catch (err) {\r\n      console.log(\"db write error while updateing\");\r\n    }\r\n  };\r\n\r\n  const handleOnTagChange = (newTag, imageID) => {\r\n    console.log(\"inside handleachange\", newTag, imageID);\r\n    setEditedTag(newTag);\r\n    console.log(\"editedTag\", editedTag);\r\n    const payload = {\r\n      id: imageID,\r\n      tag: editedTag,\r\n    };\r\n    updateDB(payload);\r\n  };\r\n\r\n  // class ImageGallery extends Component {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Row>\r\n        {props.images.map((image) => (\r\n          <Col key={image.id}>\r\n            <Card className=\" jumbotron \">\r\n              <div>\r\n                <i\r\n                  className=\"fa fa-trash pull-left \"\r\n                  aria-hidden=\"true\"\r\n                  onClick={(event) => {\r\n                    props.deleteImage(image.id);\r\n                  }}\r\n                ></i>\r\n                <a\r\n                  style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                  href={image.src}\r\n                  download=\"download.png\"\r\n                >\r\n                  <i className=\"fa fa-download \"></i>\r\n                </a>\r\n                <i\r\n                  className=\"fa fa-edit pull-right \"\r\n                  onClick={(event) => {\r\n                    setImageID(image.id);\r\n                    setToggle(true);\r\n                  }}\r\n                ></i>\r\n\r\n                <CardImg\r\n                  className=\"\"\r\n                  src={image.src}\r\n                  alt=\"Smiley face\"\r\n                  width=\"100\"\r\n                  height=\"200\"\r\n                />\r\n                <br />\r\n                <div className=\"align-items-start\">\r\n                  <CardText>owner : {image.owner}</CardText>\r\n\r\n                  {toggle ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      defaultValue={image.tag}\r\n                      onChange={(e) =>\r\n                        handleOnTagChange(e.target.value, image.id)\r\n                      }\r\n                    />\r\n                  ) : (\r\n                    <CardText> Tag : {image.tag}</CardText>\r\n                  )}\r\n\r\n                  <CardText> Dated: {image.updatedAt.toString()}</CardText>\r\n\r\n                  <CardText className=\"img-label\">\r\n                    <b>Labels using Rekognition</b>\r\n                    <br />\r\n                    {image.lables ? image.lables.join(\", \") : \"\"} \r\n                  </CardText>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\SearchImage.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\FindImage.js",["99","100","101","102","103","104","105","106"],"import React, { useState, useEffect } from \"react\";\r\nimport { Storage, API, graphqlOperation, label } from \"aws-amplify\";\r\nimport { createPicture } from \"../graphql/mutations\";\r\nimport Unsplash, { toJson } from \"unsplash-js\";\r\nimport Predictions from \"@aws-amplify/predictions\";\r\nimport awsExports from \"../aws-exports\";\r\nimport \"./FindImage.css\";\r\n\r\nfunction FindImage(props) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [pics, setPics] = useState([]);\r\n  console.log(query);\r\n\r\n  const searchPhotos = async (e) => {\r\n    e.preventDefault();\r\n    unsplash.search\r\n    .photos(query)\r\n    .then(toJson)\r\n    .then((json) => {\r\n        setPics(json.results);\r\n    });\r\n  };\r\n\r\n  const unsplash = new Unsplash({\r\n    accessKey: process.env.REACT_APP_ACCESS_KEY,\r\n  });\r\n\r\n  return (\r\n    <>\r\n        <form onSubmit={searchPhotos} className=\"form-inline\" >\r\n            <div class=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"query\"\r\n                    className=\"form-control\"\r\n                    placeholder={`Search Using Labels`}\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                />\r\n                <button className=\"btn btn-primary\" type=\"submit\">\r\n                Search\r\n                </button>\r\n            </div>\r\n      </form>\r\n      <div className=\"card-list\">\r\n        {\r\n          pics.map((pic) =>\r\n            <div className=\"card\" key={pic.id}>\r\n              <img\r\n                className=\"card-image\"\r\n                alt={pic.alt_description}\r\n                src={pic.urls.full}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n              ></img>\r\n            </div>)}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default FindImage;\r\n","C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\layout\\Header.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\App.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\App.test.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\aws-exports.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\Album.jsx",["107","108","109","110","111","112","113"],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\layout\\Footer.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\graphql\\queries.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\graphql\\subscriptions.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\reportWebVitals.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\setupTests.js",[],"C:\\Users\\14086\\Documents\\Cloud Technologies\\project_2\\src\\components\\AlbumGallery.js",["114","115","116","117","118","119","120","121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":5,"column":24,"nodeType":"130","messageId":"131","endLine":5,"endColumn":34},{"ruleId":"132","severity":1,"message":"133","line":16,"column":6,"nodeType":"134","endLine":16,"endColumn":15,"suggestions":"135"},{"ruleId":"128","severity":1,"message":"136","line":88,"column":9,"nodeType":"130","messageId":"131","endLine":88,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":117,"column":27,"nodeType":"139","messageId":"140","endLine":117,"endColumn":29},{"ruleId":"128","severity":1,"message":"141","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"142","line":2,"column":42,"nodeType":"130","messageId":"131","endLine":2,"endColumn":47},{"ruleId":"128","severity":1,"message":"143","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":16},{"ruleId":"128","severity":1,"message":"144","line":12,"column":10,"nodeType":"130","messageId":"131","endLine":12,"endColumn":15},{"ruleId":"128","severity":1,"message":"145","line":12,"column":17,"nodeType":"130","messageId":"131","endLine":12,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":26,"column":50,"nodeType":"148","messageId":"149","endLine":26,"endColumn":52},{"ruleId":"128","severity":1,"message":"150","line":37,"column":9,"nodeType":"130","messageId":"131","endLine":37,"endColumn":24},{"ruleId":"128","severity":1,"message":"151","line":50,"column":15,"nodeType":"130","messageId":"131","endLine":50,"endColumn":19},{"ruleId":"128","severity":1,"message":"152","line":51,"column":15,"nodeType":"130","messageId":"131","endLine":51,"endColumn":19},{"ruleId":"146","severity":1,"message":"147","line":53,"column":53,"nodeType":"148","messageId":"149","endLine":53,"endColumn":55},{"ruleId":"128","severity":1,"message":"153","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"142","line":4,"column":33,"nodeType":"130","messageId":"131","endLine":4,"endColumn":38},{"ruleId":"128","severity":1,"message":"154","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":18},{"ruleId":"128","severity":1,"message":"155","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":17},{"ruleId":"128","severity":1,"message":"141","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"156","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":17},{"ruleId":"128","severity":1,"message":"157","line":2,"column":19,"nodeType":"130","messageId":"131","endLine":2,"endColumn":22},{"ruleId":"128","severity":1,"message":"158","line":2,"column":24,"nodeType":"130","messageId":"131","endLine":2,"endColumn":40},{"ruleId":"128","severity":1,"message":"142","line":2,"column":42,"nodeType":"130","messageId":"131","endLine":2,"endColumn":47},{"ruleId":"128","severity":1,"message":"159","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":23},{"ruleId":"128","severity":1,"message":"160","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":19},{"ruleId":"128","severity":1,"message":"154","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":5,"column":24,"nodeType":"130","messageId":"131","endLine":5,"endColumn":34},{"ruleId":"128","severity":1,"message":"161","line":6,"column":10,"nodeType":"130","messageId":"131","endLine":6,"endColumn":23},{"ruleId":"128","severity":1,"message":"162","line":6,"column":25,"nodeType":"130","messageId":"131","endLine":6,"endColumn":38},{"ruleId":"128","severity":1,"message":"163","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":17},{"ruleId":"128","severity":1,"message":"164","line":11,"column":19,"nodeType":"130","messageId":"131","endLine":11,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":15,"column":6,"nodeType":"134","endLine":15,"endColumn":15,"suggestions":"165"},{"ruleId":"137","severity":1,"message":"138","line":52,"column":23,"nodeType":"139","messageId":"140","endLine":52,"endColumn":25},{"ruleId":"128","severity":1,"message":"153","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"166","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":14},{"ruleId":"128","severity":1,"message":"167","line":2,"column":35,"nodeType":"130","messageId":"131","endLine":2,"endColumn":43},{"ruleId":"128","severity":1,"message":"142","line":4,"column":33,"nodeType":"130","messageId":"131","endLine":4,"endColumn":38},{"ruleId":"128","severity":1,"message":"154","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":18},{"ruleId":"128","severity":1,"message":"155","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":17},{"ruleId":"128","severity":1,"message":"168","line":11,"column":19,"nodeType":"130","messageId":"131","endLine":11,"endColumn":29},{"ruleId":"128","severity":1,"message":"169","line":12,"column":10,"nodeType":"130","messageId":"131","endLine":12,"endColumn":16},{"ruleId":"128","severity":1,"message":"170","line":12,"column":18,"nodeType":"130","messageId":"131","endLine":12,"endColumn":27},{"ruleId":"128","severity":1,"message":"171","line":25,"column":9,"nodeType":"130","messageId":"131","endLine":25,"endColumn":26},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'getPicture' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllImagesToState'. Either include it or remove the dependency array.","ArrayExpression",["174"],"'manualLabels' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'label' is defined but never used.","'labels' is assigned a value but never used.","'celeb' is assigned a value but never used.","'setCeleb' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'celebritySearch' is assigned a value but never used.","'name' is assigned a value but never used.","'urls' is assigned a value but never used.","'Component' is defined but never used.","'awsExports' is defined but never used.","'imageID' is assigned a value but never used.","'Storage' is defined but never used.","'API' is defined but never used.","'graphqlOperation' is defined but never used.","'createPicture' is defined but never used.","'Predictions' is defined but never used.","'updatePicture' is defined but never used.","'deletePicture' is defined but never used.","'myAlert' is assigned a value but never used.","'setMyAlert' is assigned a value but never used.",["175"],"'Card' is defined but never used.","'CardText' is defined but never used.","'setImageID' is assigned a value but never used.","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","'handleOnTagChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},"Update the dependencies array to be: [getAllImagesToState, picture]",{"range":"179","text":"180"},{"range":"181","text":"180"},[618,627],"[getAllImagesToState, picture]",[565,574]]